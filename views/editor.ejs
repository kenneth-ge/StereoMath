<!DOCTYPE HTML>
<html>
    <head>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/mathquill/0.10.1/mathquill.css" integrity="sha512-vPg9GqsZZ4LHv9BkFfZSXt7y4D7YaARPU2JFmpZug4EgtJJrumytMAFZkNSk2LSyqWir0TNbh2tBq7UJIMxvlA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/mathquill/0.10.1/mathquill.min.js" integrity="sha512-Qsh05D07P6dURSZn8Qk+j8GI7cEK0OhXleZvTofmucwoDSkBC0juWf1401JdSE8os2kWEezMu7e9mlnszm3yEw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <link rel="stylesheet" href="toolbar.css" />
        <link rel="stylesheet" href="accessible-autocomplete.min.css" />
        <script type="text/javascript" src="accessible-autocomplete.min.js"></script>
        <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
        <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
        <link rel="stylesheet" href="main.css" />
        <audio id="tone" src="marimba.wav"></audio>
        <audio id="before" src="openparen.ogg"></audio>
        <audio id="after" src="closeparen.ogg"></audio>
        <audio id="endClick" src="endoftext.ogg"></audio>
        <script src="http://unpkg.com/tone"></script>
        <script src='https://cdn.jsdelivr.net/gh/colxi/deep-observer@latest/src/deep-observer.min.js'></script>

    </head>
    <body>
        <div id="buffer" class="buffer">
            <textarea class="bufferTxt" id="bufferTxt"></textarea>
            <button onclick="closeBuffer()">Close</button>
        </div>

        <form id="myForm">
            <div id="autocomplete" class="hidden" >
                <label for="equation-picker">Pick an expression: </label>
                <select id="equation-picker">
                    <option id="emptySelection" selected="true" style='display: none'></option>
                    <option value="fraction">fraction</option>
                    <option value="/">/</option>
                    <option value="list">list</option>
                    <option value="parentheses">parentheses</option>
                    <option value="function">function</option>
                    <option value="=">=</option>
                    <option value="equals">equals</option>
                    <option value="+">+</option>
                    <option value="plus">plus</option>
                    <option value="add">add</option>
                    <option value="-">-</option>
                    <option value="minus">minus</option>
                    <option value="subtract">subtract</option>
                    <option value="*">*</option>
                    <option value="times">times</option>
                    <option value="multiply">multiply</option>
                    <option value="cross">cross</option>
                    <option value="dot">dot</option>
                    <option value="x">x</option>
                    <option value=".">.</option>
                    <option value="^">^</option>
                    <option value="power">power</option>
                    <option value="exponent">exponent</option>
                    <option value="sum">sum</option>
                    <option value="sigma">sigma</option>
                    <option value="integral">integral</option>
                    <option value="cos">cos</option>
                    <option value="ln">ln</option>
                    <option value="log">log</option>
                    <option value="_">_</option>
                    <option value="subscript">subscript</option>
                </select>
            </div>
        </form>

        <div>
            <div class="bluecirc" id="bluecirc"></div>
            <div id="blocks" role="presentation" aria-hidden="true">
            </div>
        </div>
        
        <div id="settings">
            <div class="popup">
                <h2>Settings Menu</h2>
                    <label for="verbosity">Verbosity:</label>
                    <select id="verbosity" name="verbosity">
                        <option value="high">High</option>
                        <option value="low">Low</option>
                    </select><br><br>

                    <label for="navStyle">Navigation Style:</label>
                    <select id="navStyle" name="navStyle">
                        <option value="linear">Linear</option>
                        <option value="equation">Equation</option>
                    </select><br><br>

                    <!--<button type="submit">Save</button> --><button onclick="closesettings()">Close Menu</button>
            </div>
        </div>

        <button id="settingsbtn" type="button" onclick="opensettings()">Settings</button>
        <button id="getlatex" type="button" onclick="getlatex()">Get Latex</button>
        <button onclick="save(expression)">Save Expr</button>
        <button onclick="loadFile()">Load Expr</button>

        <input type="file" id="fileInput" style="display:none;">

        <script type="text/javascript" src="util.js"></script>
        <script type="text/javascript" src="constants.js"></script>
        <script type="text/javascript" src="spatial_keyboard.js"></script>
        <script type="text/javascript" src="operators.js"></script>
        <script type="text/javascript" src="spatialaudio.js"></script>
        <script type="text/javascript" src="select.js"></script>
        <script type="text/javascript" src="main.js"></script>
        
        <div style="display: hidden;" id="hiddenreadalouds"></div> <!-- style="display: hidden;" -->
        <script>
            var MQ = MathQuill.getInterface(2);
            var answerSpan = document.getElementById('latex');
            var answerMathField = MQ.MathField(answerSpan, {
                handlers: {
                    edit: function() {
                        var enteredMath = answerMathField.latex(); // Get entered math in LaTeX format
                        document.querySelector("button").addEventListener("click", () => {
                            document.getElementById("si_suvat_equation").innerHTML = 
                        String.raw`<span>$$\begin{gather} s = ut + \frac{1}{2}  at^{2}\\ \notag \end{gather}$$</span>`;
                            MathJax.typeset();
                        });
                        console.log(enteredMath)
                    }
                }
            });
        </script>
        <script src="index.js"></script>
<script type="text/javascript">
    var ed = answerMathField

    var items = document.querySelectorAll('.mathquill-embedded-latex');
    items.forEach(item => {
        MQ.StaticMath(item);
    });

    items = document.querySelectorAll('table div');
    items.forEach(item => {
        item.classList.add('hidden');
    });

    $(document).ready(function () {
        $('td').mouseenter(function () {
            //ed.redraw();
        });
        /*setTimeout(function () {
            $('.mathquill-rendered-math').mathquill('redraw');
        }, 1000);*/
    });

    $('.toolbar').click(function (e) {
        var latex = $(e.target).closest('p').children('code').text();
        if (latex){
            console.log(latex)
            ed.write(latex).focus();
        }
    });
    $('.toolbar').keydown(function (e) {
        if (event.keyCode === 32) {
            event.preventDefault();
        }
        // If enter is pressed, activate the button
        else if (event.keyCode === 13) {
            event.preventDefault();
            var latex = $(e.target).closest('p').children('code').text();
            if (latex){
                console.log(latex)
                ed.write(latex).focus();
            }
        }
    });
    $('.toolbar').keyup(function (e) {
        if (event.keyCode === 32) {
            event.preventDefault();
            var latex = $(e.target).closest('p').children('code').text();
            if (latex){
                console.log(latex)
                ed.write(latex).focus();
            }
        }
    });

    waitForElm(expression.id + "." + expression.focus).then((elm) => {
    console.log('finished waiting')
    elm.focus()
})
</script>
<script type="text/x-sre-config">
    {
    "json": "https://cdn.jsdelivr.net/npm/speech-rule-engine@4.1.0-beta.8/lib/mathmaps/",
    "xpath": "https://cdn.jsdelivr.net/gh/google/wicked-good-xpath@master/dist/wgxpath.install.js",
    "domain": "mathspeak",
    "style": "sbrief"
    }
    </script>
    <script src="sre.js"></script>
    <div aria-live="assertive" role="status" id="screenReaderAlert"></div>
    <div role="presentation" aria-hidden="true" id="announcementLog"></div>
    </body>
</html>